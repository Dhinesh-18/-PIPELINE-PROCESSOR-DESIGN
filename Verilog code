module pipeline(
    input clk,
    input rst,
    input [7:0] instr,
    output reg [7:0] result
);
    reg [7:0] IF_ID, ID_EX, EX_MEM, MEM_WB;
    always @(posedge clk or posedge rst)
    begin
        if (rst) begin 
            IF_ID  <= 0;
            ID_EX  <= 0;
            EX_MEM <= 0;
            MEM_WB <= 0;
            result <= 0;
        end else begin
            IF_ID  <= instr;
            ID_EX  <= IF_ID;
            EX_MEM <= ID_EX;
            MEM_WB <= EX_MEM;
            result <= MEM_WB;
        end
    end
endmodule
module pipeline_tb();
    reg clk, rst;
    reg [7:0] instr;
    wire [7:0] result;
    pipeline uut(.clk(clk), .rst(rst), .instr(instr), .result(result));

    always #25 clk = ~clk;

    initial begin
        $monitor("Time=%0t | clk=%b | rst=%b | instr=%h | result=%h", $time, clk, rst, instr, result);
        
        // Initial values
        clk = 0;
        rst = 1;
        instr = 8'b00000000;

        #50;          
        rst = 0;

   
        instr = 8'h01; #50;   // Clock cycle 1
        instr = 8'h02; #50;   // Clock cycle 2
        instr = 8'h03; #50;   // Clock cycle 3
        instr = 8'h04; #50;   // Clock cycle 4

  
        instr = 8'h00; #200;

        $finish;
    end
endmodule

